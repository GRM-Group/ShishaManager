def vM = 0
def vN = 1

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
         classpath 'com.github.rholder:gradle-one-jar:1.0.4'
		 classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

subprojects {
  apply plugin: 'pmd'
  apply plugin: 'eclipse'
 
  if (hasProperty("teamcity")) {
	    version="0."+vM+"."+vN+"."+teamcity['build.number']
	} else {
	    version="0."+vM+"."+vN
	}
  
  repositories {
		mavenCentral()
		mavenLocal()
  }

  dependencies {
    
  }
}

project(':SMLib') {
	apply plugin: 'java'
	apply plugin: 'application'
	apply plugin: 'gradle-one-jar'

	group="pl.grm.sm"
	description="Common Library for Shisha Manager Project"
	def archieveFileName="SMLib"
	mainClassName="pl.grm.sm.lib.TestSM"

	dependencies {
		compile group: 'mysql',name: 'mysql-connector-java', version: '5.1.35'
		compile group: 'com.google.guava', name: 'guava', version: '18.0'
		compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
		compile group: 'org.json', name: 'json', version: '20141113'
		compile group: 'org.ini4j', name: 'ini4j', version: '0.5.4'
		testCompile 'junit:junit:4.12'
	}

	task pmd << {
    println 'Running PMD static code analysis'
		ant {
			taskdef(name:'pmd', classname:'net.sourceforge.pmd.ant.PMDTask', classpath: configurations.pmdConf.asPath)

			pmd(shortFilenames:'true', failonruleviolation:'true', rulesetfiles:'conf/pmd-rules.xml') {
				formatter(type:'csv', tofile:'myreport.csv', toConsole:'true')
				fileset(dir: "src/main/java") {
					include(name: '**/*.java')
				}
				fileset(dir: "src/test/java") {
					include(name: '**/*.java')
				}        
			}
		}
	}
}

project(':SMDesktop') {
    apply plugin: 'java'
	apply plugin: 'application'
	apply plugin: 'gradle-one-jar'

	dependencies {
        compile project(':SMLib')
		testCompile 'junit:junit:4.12'
    }
	
	group="pl.grm.sm"
	description="Shisha Manager Desktop App"
	def archieveFileName="ShishaManager"
	mainClassName="pl.grm.sm.Main"

	jar {
		manifest {
			attributes 'Main-Class': mainClassName
			attributes "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
		}
	}

	task pmd << {
    println 'Running PMD static code analysis'
		ant {
			taskdef(name:'pmd', classname:'net.sourceforge.pmd.ant.PMDTask', classpath: configurations.pmdConf.asPath)

			pmd(shortFilenames:'true', failonruleviolation:'true', rulesetfiles:'conf/pmd-rules.xml') {
				formatter(type:'csv', tofile:'myreport.csv', toConsole:'true')
				fileset(dir: "src/main/java") {
					include(name: '**/*.java')
				}
				fileset(dir: "src/test/java") {
					include(name: '**/*.java')
				}        
			}
		}
	}
}

project(':SMAndroid') {
	apply plugin: 'android'
	
	android {
		compileSdkVersion 23
		buildToolsVersion "23.0.1"
	}
	
	dependencies {
        compile project(':SMLib')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}